buildscript {
    apply from: "$rootDir/config/gradle/libraries.gradle"

    repositories {

        gradlePluginPortal()
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
        maven {
            url 'https://repo.spring.io/libs-milestone'
        }

    }
}

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE' apply true
    id 'io.spring.dependency-management' version '1.0.10.RELEASE' apply true
    id "org.openapi.generator" version "4.3.0" apply true
    id 'idea'
    id 'java'
}

ext {
    moduleVersion = '1.1.1'
}

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

dependencies {
    implementation libs.tools.jacksonObjectMapper
    implementation libs.spring.boot.starterActuator
    implementation libs.spring.boot.starterWeb
    implementation libs.spring.boot.starterLog4j2
    implementation libs.spring.boot.processor

    implementation libs.spring.cloud.cloudStream
    implementation libs.spring.cloud.binderKafka
    implementation libs.spring.cloud.micrometerStarterCommon

    implementation libs.spring.kafka

    implementation libs.lombok
    annotationProcessor libs.lombok
    testAnnotationProcessor libs.lombok
    implementation libs.tools.commonIo
    implementation libs.tools.gson

    implementation libs.micrometer.core
    implementation libs.micrometer.prometheus
    implementation libs.micrometer.registryPrometheus

    testImplementation libs.test.cloudStreamTestSupport
    testImplementation libs.test.jimfs
}

apply from: "$rootDir/config/gradle/core.gradle"

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task unpack(type: Copy) {
    dependsOn bootJar
    from(zipTree(tasks.bootJar.outputs.files.singleFile))
    into("build/dependency")
}

springBoot {
    mainClassName = 'ru.voskhod.gpparf.integration.infodiode.sink.app.InfoDiodeSinkApplication'
    buildInfo()
}




